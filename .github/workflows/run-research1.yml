name: research1-run
run-name: research1-run (${{ inputs.run_tag }})

on:
  workflow_dispatch:
    inputs:
      run_tag:
        description: "Unique tag for this run (e.g. fr-20251027-1)"
        required: true
        default: local-1
        type: string
      args:
        description: "All CLI flags as a single string (e.g. --countries FR --results-per-page 50 ...)"
        required: true
        default: ""
        type: string

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout public repo
        uses: actions/checkout@v4

      - name: Checkout private runner repo
        uses: actions/checkout@v4
        with:
          repository: fpart2/research1-runner
          token: ${{ secrets.PRIVATE_REPO_PAT }}
          path: runner

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install -U pip
          if [ -f runner/requirements.txt ]; then pip install -r runner/requirements.txt; fi

      - name: Run task
        run: |
          mkdir -p out
          # All flags come in via ${{ inputs.args }}
          python runner/research1_task.py --out out ${{ inputs.args }}

      - name: Prune already-have files
        run: |
          set -e
          HAVE_GZ="runner/state/${{ inputs.run_tag }}/have.txt.gz"
          mkdir -p /tmp
          if [ -f "$HAVE_GZ" ]; then
            gunzip -c "$HAVE_GZ" | sed 's/\r$//' | sort -u > /tmp/have.txt
          else
            : > /tmp/have.txt
          fi

          # Build list ONLY from requested countries (not everything in out/)
          CCS="$(echo "${{ inputs.countries }}" | tr ',' ' ' | tr '[:lower:]' '[:upper:]')"
          : > /tmp/all.txt
          for c in $CCS; do
            if [ -d "out/$c" ]; then
              ( cd out && find "$c" -type f -name '*.json' -print ) >> /tmp/all.txt
            fi
          done
          sort -u /tmp/all.txt -o /tmp/all.txt

          # Remove files that we already have locally (duplicates)
          comm -12 /tmp/all.txt /tmp/have.txt > /tmp/dups.txt || true
          while IFS= read -r rel; do
            [ -n "$rel" ] && rm -f "out/$rel" || true
          done < /tmp/dups.txt


      - name: Package artifacts (per country directory)
        run: |
          mkdir -p artifacts
          cd out || exit 0
          shopt -s nullglob
          for d in */ ; do
            d="${d%/}"
            if find "$d" -type f -name '*.json' -print -quit | grep -q . ; then
              zip -r "../artifacts/${d}.zip" "$d"
            fi
          done
          cd -

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: research1-output-${{ inputs.run_tag }}
          path: artifacts/*.zip
          compression-level: 0
